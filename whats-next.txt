Tasks - Open

* DONE Remove Title Bar
* DONE Inflate layout, then add Zoominglayout in code
* DONE Add PAuse button
* DONE Disable automatic gameloop if pause pressed
** Add singlestep button
** GameRunLoopControlHandler refactor the positions of the interfaces

* BuildDialogHandler: Redraw FlagTile right away

* Block cells which already applied submitted Gamestate objects for further changes. This helps in many cases
** DONE Is this really possible? Works bad with the granular states. The Game States cannot be atomic then
** DONE Better to run the transports not in a loop. apply each Transport before calculating the next
** DONE BUt how to make sure, that a single item is not moved twice a round
** DONE Block the move ressources for a round. Add a touched property for destinationcell
** DONE Add circular search for items for transport, starting at the destination
*** DONE Atm this blocks the transport
*** DONE Add Tests getNeighboursOfCellDoubleCoords
*** DONE Refactor getNeighboursOfCellDoubleCoords
*** DONE Add tests calcRouteToItemInTransport/calcRouteToItemInStorage
*** DONE Refactor calcRouteToItemInTransport/calcRouteToItemInStorage
*** DONE Add tests handleRequests
*** DONE Refactor handleRequests
*** DONE Bug: Sometimes and item will be jumping around between two destinations
**** DONE Build a mechanism to init the gameworld to a specific state. It should not be necessary to recreate it fpr every test
**** DONE Add a test in Transportation for this case?
** Add Step move from storage to transport in place
* Only allow setting of one item each round at a cell?

* Improve TestSetup
** DONERefactor TestSetup. Build Factory methods??
** Maybe use of Hilt is better?

** DONE Refactor MapManager to delegate applyState
*** DONE How to fix the cyclic dependency?
** DONE BuildDialog: Set buildings through GameStateObjects
** How handle buildings? They sould not behave as roads, only for start or destination
*** Add obstacles to routing
** A single cell shall transport only a single item each round
*** The transport system ignores how many things are already on a field. So if lumberjack requests
    3 items of wood it crashes
** What happens if the route of an active transport is interrrupted



** Make simple class structure without dependencies
*** Should start by simple coordinate
*** Create a transport class which accepts Start and destination
** Write tests for Transport
** Do I need neighbour pointers for my cells?
** Investigate A* Algorithm
* Plan enemy
** Zombie? which moves from spawner to attack most valueable buildung
* Defense tower
** Add build defense tower for 5 Wood
** Shoots projectiles at Zombies
* Combat system
** Buildings have lifepoints
** If Zombies move onto them, they do 1 dmg per round
** Buildings can request material, to be repaired

* Monument
** Add Build Pyramids for 100 Wood



M1 MVP

* Name - Idea "Township Survival"
* Design MVP which is playable
** Gameloop
*** What are must have buildings
**** (Townhall) Storage
**** (Lumberjack) Material
**** (Defensetower) Shoot zombies
***
** Goal
*** Build Monument
** Obstacles
*** Enemy spawners
**** Send waves
** Pixelart Graphics
** Scrollable map
*** Run on small phones to see if the scrollable map works
*** ALternative is some grid system, which expands to a single cell on a bigger grid

M2 Playstore
* Make App Icon
* Write Description Text
* Configure Setting
* Launch

M3 Add features